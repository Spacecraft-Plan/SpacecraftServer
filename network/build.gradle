apply plugin: 'java-library'
apply plugin: 'kotlin'
apply plugin: "org.springframework.boot"

apply plugin: 'com.google.protobuf'
protobuf {
    protoc {
        // You still need protoc like in the non-Android case
        artifact = 'com.google.protobuf:protoc:3.7.1'
//        path = '/usr/local/Cellar/protobuf/3.7.1'
    }
    plugins {
        javalite {
            // The codegen for lite comes as a separate artifact
            artifact = 'com.google.protobuf:protoc-gen-javalite:3.0.0'
        }
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.0.0-pre2'
//            artifact = "io.grpc:protoc-gen-grpc-java:${rootProject.ext.grpcVersion}"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                // In most cases you don't need the full Java output
                // if you use the lite output.
                remove java
            }
            task.plugins {
                javalite {}
                grpc {
                    // Options added to --grpc_out
                    option 'lite'
                }
            }
        }
    }
}

//version = "1.0"
//compileKotlin.kotlinOptions.jvmTarget = "1.8"
//compileTestKotlin.kotlinOptions.jvmTarget = "1.8"
apply plugin: "de.fuerstenau.buildconfig"
buildConfig {
    packageName = "com.hawksjamesf.network"

    buildConfigField 'String', 'JWT_SIGNING_KEY', project.findProperty("jwtSigningKey") ?: "KkYtSmFOZFJnVWtYbjJyNXU4eC9BP0QoRytLYlBlU2hWbVlxM3M2djl5JEImRSlIQE1jUWZUalduWnI0dTd3IQ=="
}


dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api project(path: ":common")
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    api "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
//    api 'com.google.protobuf:protobuf-javalite:3.7.0'
    api 'com.google.protobuf:protobuf-lite:3.0.0'
    ///non-Android platform
    api "io.grpc:grpc-netty-shaded:${grpcVersion}"
    api "io.grpc:grpc-protobuf:${grpcVersion}"
    api "io.grpc:grpc-stub:${grpcVersion}"
    api "javax.annotation:javax.annotation-api:1.3.1"
    //Android platform
//    api 'io.grpc:grpc-okhttp:1.17.1'
//    api 'io.grpc:grpc-protobuf-lite:1.17.1'
//    api 'io.grpc:grpc-stub:1.17.1'
    api 'io.springfox:springfox-swagger2:2.9.2'
    api 'io.springfox:springfox-swagger-ui:2.9.2'

    //rpc框架
    // https://mvnrepository.com/artifact/com.alibaba/dubbo
//    compile group: 'com.alibaba', name: 'dubbo', version: '2.5.3'
}
