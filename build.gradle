// Top-level build file where you can add configuration options common to all sub-projects/modules.

println("root project start")
buildscript {
    repositories {
        jcenter()
        google()
        maven { url "https://jitpack.io" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url 'https://plugins.gradle.org/m2/' }
//        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
//        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter/' }
//        maven { url "https://maven.aliyun.com/repository/public/" }
//
//        all { ArtifactRepository repo ->
//            if (repo instanceof MavenArtifactRepository) {
//                def url = repo.url.toString()
//
//                if (url.startsWith('https://repo.maven.apache.org/maven2/') || url.startsWith('https://repo.maven.org/maven2') || url.startsWith('https://repo1.maven.org/maven2') || url.startsWith('https://jcenter.bintray.com/')) {
//                    //project.logger.lifecycle "Repository ${repo.url} replaced by $REPOSITORY_URL."
//                    remove repo
//                }
//            }
//        }
    }
    ext {
        //server
        kotlinVersion = "1.3.41"
        springBootVersion = '2.0.0.M7'
        springFrameworkVersion = '5.1.3.RELEASE'

//        grpcVersion='1.17.1'
//        grpcVersion='1.16.1'
        grpcVersion = '1.14.0'
//
    }
    dependencies {
        classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.6"
        classpath "org.jetbrains.kotlin:kotlin-serialization:1.3.21"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:2.1.7.RELEASE"
        classpath "gradle.plugin.de.fuerstenau:BuildConfigPlugin:1.1.8"
        classpath "com.bmuschko:gradle-docker-plugin:3.2.4"
    }
}

allprojects {
    repositories {
        jcenter()
        google()
        maven { url "https://jitpack.io" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url 'https://plugins.gradle.org/m2/' }
//        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
//        maven { url 'http://maven.aliyun.com/nexus/content/repositories/jcenter/' }
//        maven{ url 'https://maven.aliyun.com/repository/public/'}
//
//        all { ArtifactRepository repo ->
//            if (repo instanceof MavenArtifactRepository) {
//                def url = repo.url.toString()
//                if (url.startsWith('https://repo1.maven.org/maven2') || url.startsWith('https://jcenter.bintray.com/')) {
//                    //project.logger.lifecycle "Repository ${repo.url} replaced by $REPOSITORY_URL."
//                    remove repo
//                }
//            }
//        }
    }

}

task clean(type: Delete) {
    delete rootProject.buildDir
}

//task hello(){
//    println("hello world")
//
//}


println("root project end")
