// Top-level build file where you can add configuration options common to all sub-projects/modules.

println("root project start")
buildscript {
    repositories {
        jcenter()
        google()
        maven { url "https://jitpack.io" }
        maven { url = uri "https://repo.spring.io/milestone" }
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url "https://maven.aliyun.com/repository/jcenter" }
    }
    ext {
        //server
        kotlinVersion = "1.2.71"
        springBootVersion = '2.0.0.M7'
        springFrameworkVersion = '5.1.3.RELEASE'

//        grpcVersion='1.17.1'
//        grpcVersion='1.16.1'
        grpcVersion = '1.14.0'
//
    }
    dependencies {
        classpath "com.android.tools.build:gradle:3.2.1"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "com.google.protobuf:protobuf-gradle-plugin:0.8.6"
//
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files


        //server
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlinVersion"
        classpath "org.jetbrains.kotlin:kotlin-noarg:$kotlinVersion"
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath "gradle.plugin.de.fuerstenau:BuildConfigPlugin:1.1.8"
        classpath "com.bmuschko:gradle-docker-plugin:3.2.4"
    }
}

allprojects {
    repositories {
        jcenter()
        google()
        maven { url "https://jitpack.io" }
        maven { url = uri "https://repo.spring.io/milestone" }
        maven { url 'https://plugins.gradle.org/m2/' }
        maven { url "https://maven.aliyun.com/repository/jcenter" }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

//task hello(){
//    println("hello world")
//
//}


println("root project end")
