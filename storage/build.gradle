apply plugin: 'java-library'
apply plugin: 'kotlin'
apply plugin: "kotlin-spring"
apply plugin: "kotlin-jpa"

// Define version
version = "1.0"
//compileKotlin.kotlinOptions.jvmTarget = "1.8"
//compileTestKotlin.kotlinOptions.jvmTarget = "1.8"
apply plugin: "de.fuerstenau.buildconfig"
buildConfig {

    packageName = "com.hawksjamesf.storage"
    buildConfigField 'String', 'env_jdbc_driver', project.findProperty("jwtSigningKey") ?: "KkYtSmFOZFJnVWtYbjJyNXU4eC9BP0QoRytLYlBlU2hWbVlxM3M2djl5JEImRSlIQE1jUWZUalduWnI0dTd3IQ=="
    buildConfigField 'String', 'env_jdbc_url', project.findProperty("jwtSigningKey") ?: "KkYtSmFOZFJnVWtYbjJyNXU4eC9BP0QoRytLYlBlU2hWbVlxM3M2djl5JEImRSlIQE1jUWZUalduWnI0dTd3IQ=="
    buildConfigField 'String', 'env_jdbc_username', project.findProperty("jwtSigningKey") ?: "KkYtSmFOZFJnVWtYbjJyNXU4eC9BP0QoRytLYlBlU2hWbVlxM3M2djl5JEImRSlIQE1jUWZUalduWnI0dTd3IQ=="
    buildConfigField 'String', 'env_jdbc_password', "123456"
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    api project(path: ":common")

    /**
     * no sql数据库连接
     */
//    api("org.springframework.boot:spring-boot-starter-data-cassandra:$springBootVersion")
//    api("org.springframework.boot:spring-boot-starter-data-cassandra-reactive:$springBootVersion")
//    api("org.springframework.boot:spring-boot-starter-data-couchbase:$springBootVersion")
//    api("org.springframework.boot:spring-boot-starter-data-couchbase-reactive:$springBootVersion")
//    api("org.springframework.boot:spring-boot-starter-data-elasticsearch:$springBootVersion")
//    api "org.springframework.boot:spring-boot-starter-data-mongodb:$springBootVersion"
//    api "org.springframework.boot:spring-boot-starter-data-mongodb-reactive:$springBootVersion"
//    api "org.springframework.boot:spring-boot-starter-data-neo4j:$springBootVersion"
    api "org.springframework.boot:spring-boot-starter-data-redis:$springBootVersion"
    api "org.springframework.boot:spring-boot-starter-data-redis-reactive:$springBootVersion"
//    api "org.springframework.boot:spring-boot-starter-data-solr:$springBootVersion"
    /**
     * sql数据库连接
     */
    api "org.springframework.boot:spring-boot-starter-data-ldap:$springBootVersion"
    api "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"
//    api "org.springframework.boot:spring-boot-starter-data-jdbc:$springBootVersion"
    api "org.springframework.boot:spring-boot-starter-jdbc:$springBootVersion"
    api group: 'mysql', name: 'mysql-connector-java', version: '8.0.17'
    api 'com.alibaba:druid-spring-boot-starter:1.1.17'
    api("org.mybatis.spring.boot:mybatis-spring-boot-starter:2.0.1")

    /**
     * configuration
     */
    api("org.springframework.boot:spring-boot-configuration-processor:$springBootVersion")
    api("org.springframework.boot:spring-boot-autoconfigure:$springBootVersion")
    api("org.springframework.boot:spring-boot-configuration-metadata:$springBootVersion")

    /**
     * test
     */
    testImplementation "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    testImplementation "org.springframework.boot:spring-boot-test:$springBootVersion"
    testImplementation "org.springframework.boot:spring-boot-test-autoconfigure:$springBootVersion"
    testImplementation("org.springframework.boot:spring-boot-junit-runners:$springBootVersion")
}
